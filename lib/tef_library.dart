// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: non_constant_identifier_names

import 'dart:ffi' as ffi;

/// Bindings to `lib\native\tef_comands.h`.
class TefLibrary {
  /// Holds the symbol lookup function.
  final ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
      _lookup;

  /// The symbols are looked up in [dynamicLibrary].
  TefLibrary(ffi.DynamicLibrary dynamicLibrary)
      : _lookup = dynamicLibrary.lookup;

  /// The symbols are looked up with [lookup].
  TefLibrary.fromLookup(
      ffi.Pointer<T> Function<T extends ffi.NativeType>(String symbolName)
          lookup)
      : _lookup = lookup;

  int ConfiguraIntSiTefInterativo(
    ffi.Pointer<ffi.Char> IPSiTef,
    ffi.Pointer<ffi.Char> IdLoja,
    ffi.Pointer<ffi.Char> IdTerminal,
    ffi.Pointer<ffi.Char> Reservado,
  ) {
    return _ConfiguraIntSiTefInterativo(
      IPSiTef,
      IdLoja,
      IdTerminal,
      Reservado,
    );
  }

  late final _ConfiguraIntSiTefInterativoPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>)>>('ConfiguraIntSiTefInterativo');
  late final _ConfiguraIntSiTefInterativo =
      _ConfiguraIntSiTefInterativoPtr.asFunction<
          int Function(ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>();

  int IniciaFuncaoAASiTefInterativo(
    int Funcao,
    ffi.Pointer<ffi.Char> Valor,
    ffi.Pointer<ffi.Char> CupomFiscal,
    ffi.Pointer<ffi.Char> DataFiscal,
    ffi.Pointer<ffi.Char> HoraFiscal,
    ffi.Pointer<ffi.Char> Operador,
    ffi.Pointer<ffi.Char> ParamAdic,
    ffi.Pointer<ffi.Char> Produtos,
  ) {
    return _IniciaFuncaoAASiTefInterativo(
      Funcao,
      Valor,
      CupomFiscal,
      DataFiscal,
      HoraFiscal,
      Operador,
      ParamAdic,
      Produtos,
    );
  }

  late final _IniciaFuncaoAASiTefInterativoPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Int,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>)>>('IniciaFuncaoAASiTefInterativo');
  late final _IniciaFuncaoAASiTefInterativo =
      _IniciaFuncaoAASiTefInterativoPtr.asFunction<
          int Function(
              int,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>)>();

  int ContinuaFuncaoSiTefInterativo(
    ffi.Pointer<ffi.Int> Comando,
    ffi.Pointer<ffi.Long> TipoCampo,
    ffi.Pointer<ffi.Short> TamMinimo,
    ffi.Pointer<ffi.Short> TamMaximo,
    ffi.Pointer<ffi.Char> Buffer,
    int TamBuffer,
    int Continua,
  ) {
    return _ContinuaFuncaoSiTefInterativo(
      Comando,
      TipoCampo,
      TamMinimo,
      TamMaximo,
      Buffer,
      TamBuffer,
      Continua,
    );
  }

  late final _ContinuaFuncaoSiTefInterativoPtr = _lookup<
      ffi.NativeFunction<
          ffi.Int Function(
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Long>,
              ffi.Pointer<ffi.Short>,
              ffi.Pointer<ffi.Short>,
              ffi.Pointer<ffi.Char>,
              ffi.Int,
              ffi.Int)>>('ContinuaFuncaoSiTefInterativo');
  late final _ContinuaFuncaoSiTefInterativo =
      _ContinuaFuncaoSiTefInterativoPtr.asFunction<
          int Function(
              ffi.Pointer<ffi.Int>,
              ffi.Pointer<ffi.Long>,
              ffi.Pointer<ffi.Short>,
              ffi.Pointer<ffi.Short>,
              ffi.Pointer<ffi.Char>,
              int,
              int)>();

  void FinalizaFuncaoSiTefInterativo(
    int Confirma,
    ffi.Pointer<ffi.Char> CupomFiscal,
    ffi.Pointer<ffi.Char> DataFiscal,
    ffi.Pointer<ffi.Char> HoraFiscal,
    ffi.Pointer<ffi.Char> ParamAdic,
  ) {
    return _FinalizaFuncaoSiTefInterativo(
      Confirma,
      CupomFiscal,
      DataFiscal,
      HoraFiscal,
      ParamAdic,
    );
  }

  late final _FinalizaFuncaoSiTefInterativoPtr = _lookup<
      ffi.NativeFunction<
          ffi.Void Function(
              ffi.Short,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>)>>('FinalizaFuncaoSiTefInterativo');
  late final _FinalizaFuncaoSiTefInterativo =
      _FinalizaFuncaoSiTefInterativoPtr.asFunction<
          void Function(int, ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>,
              ffi.Pointer<ffi.Char>, ffi.Pointer<ffi.Char>)>();
}
